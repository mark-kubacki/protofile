stages:
- prepare
- test

.go_dirlayout_template: &prepare_go_dirlayout
  image: "hub.blitznote.com:4567/src/go:1.11"
  before_script:
  - mkdir -p vendor /var/go/ours /var/go/theirs
  - ln -s "$(pwd -P)/vendor" /var/go/theirs/src
  - export GOPATH=/var/go/theirs:/var/go/ours:/usr/share/gocode

  - export GODIR="/var/go/ours/src/blitznote.com/${CI_PROJECT_PATH}"
  - mkdir -p "$(dirname "$GODIR")"
  - ln -sfv "$(pwd -P)" "$GODIR"

  - cd "$GODIR"
  - if [[ -s .gitmodules ]]; then
      git submodule update --init --recursive;
    fi

cache:dependencies:
  <<: *prepare_go_dirlayout
  stage: prepare
  script:
  - if [[ -s Gopkg.toml ]]; then
      dep ensure;
      dep status;
    fi
  - cd "$CI_PROJECT_DIR"
  - go get -v -t
  - cd "$GODIR"
  cache:
    key: "$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME"
    policy: pull-push
    paths:
    - Gopkg.lock
    - vendor/
  artifacts:
    expire_in: 1 hour
    name: "$CI_PROJECT_NAME-$CI_COMMIT_REF_NAME-dependencies"
    paths:
    - Gopkg.lock
    - vendor/

.go_depends_template: &get_dependencies
  <<: *prepare_go_dirlayout
  dependencies:
  - 'cache:dependencies'

vet:
  stage: test
  <<: *get_dependencies
  script:
  - diff <(echo -n) <(gofmt -s -d $(find . -type f -name '*.go' -not -path "./_*"))
  - go vet ./...

lint:
  stage: test
  <<: *get_dependencies
  script:
  - ineffassign .
  - golint ./...

unittests:
  stage: test
  <<: *get_dependencies
  script:
  - go test -v ./...
