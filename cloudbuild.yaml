tags: ['golang']

steps:
- name: 'golang'
  id: 'gofmt'
  entrypoint: 'bash'
  args: ['-c', 'diff <(echo -n) <(gofmt -s -d $(find . -type f -name "*.go" -not -path "./_*"))']

- name: 'gcr.io/blitznote/golang/ineffassign'
  id: 'ineffassign'
  waitFor: ['gofmt']
  args: ['.']
- name: 'gcr.io/blitznote/golang/golint'
  id: 'lint'
  waitFor: ['gofmt']

- &use_go
  name: 'golang'
  volumes:
  - name: 'go-modules'
    path: '/go'
  env: ['GOPATH=/go:/usr/share/gocode', 'GO111MODULE=on']
  id: 'get dependencies'
  entrypoint: '/usr/local/go/bin/go'
  args: ['mod', 'download']

- <<: *use_go
  id: 'vet'
  waitFor: ['get dependencies']
  env: ['GOPATH=/go:/usr/share/gocode', 'GO111MODULE=on', 'GOPROXY=off']
  args: ['vet', './...']
- <<: *use_go
  id: 'unittests'
  waitFor: ['get dependencies']
  env: ['GOPATH=/go:/usr/share/gocode', 'GO111MODULE=on', 'GOPROXY=off']
  args: ['test', '-v', './...']

- &build_go
  <<: *use_go
  waitFor: ['get dependencies', 'vet', 'unittests']
  id: 'build linux amd64'
  env: ['GOPATH=/go:/usr/share/gocode', 'GO111MODULE=on', 'GOPROXY=off', 'GOARCH=amd64', 'GOOS=linux']
  args: ['build', '.', 'errors']
- <<: *build_go
  id: 'build windows amd64'
  env: ['GOPATH=/go:/usr/share/gocode', 'GO111MODULE=on', 'GOPROXY=off', 'GOARCH=amd64', 'GOOS=windows']
